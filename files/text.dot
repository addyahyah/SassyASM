digraph sassy_uml{node [shape = "record"] Collections[label = "{Collections|- BINARYSEARCH_THRESHOLD : int\l- REVERSE_THRESHOLD : int\l- SHUFFLE_THRESHOLD : int\l- FILL_THRESHOLD : int\l- ROTATE_THRESHOLD : int\l- COPY_THRESHOLD : int\l- REPLACEALL_THRESHOLD : int\l- INDEXOFSUBLIST_THRESHOLD : int\l- r : Random\l+ EMPTY_SET : Set\l+ EMPTY_LIST : List\l+ EMPTY_MAP : Map\l|+ rotate(List, int) : void\l+ emptyIterator() : Iterator\l+ emptyNavigableSet() : NavigableSet\l+ newSetFromMap(Map) : Set\l+ indexOfSubList(List, List) : int\l+ frequency(Collection, Object) : int\l+ unmodifiableCollection(Collection) : Collection\l+ checkedNavigableSet(NavigableSet, Class) : NavigableSet\l+ checkedSortedMap(SortedMap, Class, Class) : SortedMap\l- indexedBinarySearch(List, Object, Comparator) : int\l+ checkedSortedSet(SortedSet, Class) : SortedSet\l+ checkedNavigableMap(NavigableMap, Class, Class) : NavigableMap\l+ singletonMap(Object, Object) : Map\l+ disjoint(Collection, Collection) : boolean\l+ enumeration(Collection) : Enumeration\l- iteratorBinarySearch(List, Object, Comparator) : int\l+ unmodifiableNavigableSet(NavigableSet) : NavigableSet\l+ emptyNavigableMap() : NavigableMap\l+ emptyEnumeration() : Enumeration\l+ synchronizedNavigableMap(NavigableMap) : NavigableMap\l singletonIterator(Object) : Iterator\l+ synchronizedSortedSet(SortedSet) : SortedSet\l- swap(Object[], int, int) : void\l+ checkedCollection(Collection, Class) : Collection\l+ sort(List, Comparator) : void\l- <init>() : void\l+ fill(List, Object) : void\l+ synchronizedNavigableSet(NavigableSet) : NavigableSet\l+ list(Enumeration) : ArrayList\l eq(Object, Object) : boolean\l+ unmodifiableMap(Map) : Map\l zeroLengthArray(Class) : Object[]\l+ unmodifiableList(List) : List\l+ lastIndexOfSubList(List, List) : int\l- rotate1(List, int) : void\l- rotate2(List, int) : void\l+ asLifoQueue(Deque) : Queue\l+ synchronizedSortedMap(SortedMap) : SortedMap\l <clinit>() : void\l+ emptySet() : Set\l+ reverseOrder(Comparator) : Comparator\l synchronizedCollection(Collection, Object) : Collection\l+ binarySearch(List, Object, Comparator) : int\l+ replaceAll(List, Object, Object) : boolean\l+ checkedMap(Map, Class, Class) : Map\l+ emptyList() : List\l+ min(Collection, Comparator) : Object\l+ unmodifiableSet(Set) : Set\l- get(ListIterator, int) : Object\l+ emptyMap() : Map\l synchronizedList(List, Object) : List\l+ copy(List, List) : void\l+ checkedSet(Set, Class) : Set\l+ singleton(Object) : Set\l+ synchronizedMap(Map) : Map\l+ unmodifiableNavigableMap(NavigableMap) : NavigableMap\l synchronizedSet(Set, Object) : Set\l+ max(Collection, Comparator) : Object\l+ singletonList(Object) : List\l+ reverse(List) : void\l singletonSpliterator(Object) : Spliterator\l+ checkedList(List, Class) : List\l+ emptySortedMap() : SortedMap\l+ nCopies(int, Object) : List\l+ unmodifiableSortedMap(SortedMap) : SortedMap\l+ emptyListIterator() : ListIterator\l+ addAll(Collection, Object[]) : boolean\l+ checkedQueue(Queue, Class) : Queue\l+ emptySortedSet() : SortedSet\l+ shuffle(List, Random) : void\l+ unmodifiableSortedSet(SortedSet) : SortedSet\l}"]}